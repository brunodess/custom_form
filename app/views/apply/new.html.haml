= simple_form_for @apply do |form|
  = form.input :student_name
  = form.input :application_process_id, as: :hidden, input_html: { value: params[:application_process_id] }
  .nested-fields
    = form.simple_fields_for :form_field_inputs do |f|
      = f.input :form_field_id, as: :hidden, input_html: { value: f.object.form_field.id }
      - if f.object.form_field.field_type == 'select'
        = f.input :input, label: f.object.form_field.name, :as => :collection_select, collection: FormFieldValue.where(form_field_id: f.object.form_field.id ),
                    :label_method => :value, :value_method => :value, include_blank: !f.object.form_field.is_mandatory?
      - elsif f.object.form_field.field_type == 'radio'
        = f.input :input, label: f.object.form_field.name, as: :radio_buttons, collection: FormFieldValue.where(form_field_id: f.object.form_field.id ),
                    :label_method => :value, :value_method => :value, required: f.object.form_field.is_mandatory?
      - elsif f.object.form_field.field_type == 'single_checkbox'
        = f.input :input, label: f.object.form_field.name, as: :boolean, checked_value: true, unchecked_value: false
      - elsif f.object.form_field.field_type == 'collection_checkbox'
        = f.input :input, label: f.object.form_field.name, as: :check_boxes, collection: FormFieldValue.where(form_field_id: f.object.form_field.id ),
                    :label_method => :value, :value_method => :value
      - else
        = f.input :input, label: f.object.form_field.name, as: :string, required: f.object.form_field.is_mandatory?

  = form.submit

